// For license information, see `https://assets.adobedtm.com/d4d114c60e50/a0e989131fd5/c1bf8599ed06/RCffb9405072cb43d6ba42ced37990f814-file.js`.
var TTD_RID_CFG={COOKIE_PARTNER_ID:"em9e3aj",FIRSTPARTY_COOKIE:"ttd_TDID",FIRSTPARTY_COOKIE_OPTIONS:"path=/;domain=.adobe.com;secure;SameSite=Strict;",LOG_TO_CONSOLE:!1,LOG_MESSAGE_PREFIX:"TTD Realtime ID: ",FIRSTPARTY_COOKIE_WRITE:!0,FIRSTPARTY_COOKIE_ALWAYS_REFRESH:!1,FIRSTPARTY_COOKIE_EXPIRY_DAYS:7,RID_BASE_URL:"https://match.adsrvr.org/track/rid?fmt=json",RID_INCL_DOMAIN:!0,RID_DOMAIN_VALUE:window.location.hostname,RID_REQUEST_OPTIONS:{credentials:"include",mode:"cors",cache:"no-cache"},CALLBACKS:[]},TTD_RID_STATUS={NEW:"NEW",REFRESHED:"REFRESHED",SKIPPED:"SKIPPED",FAILED:"FAILED",REJECTED:"REJECTED"},ttd_executeCallbacks=function(t,_){for(var e in ttd_log("ttd_executeCallbacks("+t+", "+_+")"),TTD_RID_CFG.CALLBACKS)"function"==typeof TTD_RID_CFG.CALLBACKS[e]&&TTD_RID_CFG.CALLBACKS[e](t,_)},ttd_log=function(t){if(TTD_RID_CFG.LOG_TO_CONSOLE)switch(typeof t){case"string":case"boolean":case"number":console.log(TTD_RID_CFG.LOG_MESSAGE_PREFIX+t);break;default:console.log(TTD_RID_CFG.LOG_MESSAGE_PREFIX+"..["+typeof t+"].."),console.log(t)}},ttd_getNowPlusDaysString=function(t){ttd_log("ttd_getNowPlusDaysString("+t+")");var _=864e5,e=new Date,T=e.getTime()+_*t;return e.setTime(T),e.toUTCString()},ttd_writeCookie=function(t,_,e,T){ttd_log("ttd_writeCookie("+t+","+_+","+e+")");var D=t+"="+_+";expires="+e+";"+T;ttd_log("Setting Cookie as: "+D),document.cookie=D},ttd_getCookie=function(t){ttd_log("ttd_getCookie("+t+")"),t+="=";for(var _=decodeURIComponent(document.cookie).split(";"),e=0;e<_.length;e++){for(var T=_[e];" "==T.charAt(0);)T=T.substring(1);if(0==T.indexOf(t))return T.substring(t.length,T.length)}return!1},ttd_getRequestUrl=function(){var t=TTD_RID_CFG.RID_BASE_URL+"&ttd_pid="+TTD_RID_CFG.COOKIE_PARTNER_ID;return TTD_RID_CFG.RID_INCL_DOMAIN?t+"&domain="+TTD_RID_CFG.RID_DOMAIN_VALUE:t},ttd_initRID=function(){var t=ttd_getCookie(TTD_RID_CFG.FIRSTPARTY_COOKIE);if(1==TTD_RID_CFG.FIRSTPARTY_COOKIE_ALWAYS_REFRESH||!1===t)try{fetch(ttd_getRequestUrl(),TTD_RID_CFG.RID_REQUEST_OPTIONS).then((function(t){return ttd_log("Converting JSON response to object."),t.json()})).then((function(_){if("string"!=typeof _.TDID)return ttd_log("RID did not return a TDID. Review Network request response."),void ttd_executeCallbacks(TTD_RID_STATUS.REJECTED,!1);ttd_log("TDID is "+_.TDID),TTD_RID_CFG.FIRSTPARTY_COOKIE_WRITE&&ttd_writeCookie(TTD_RID_CFG.FIRSTPARTY_COOKIE,_.TDID,ttd_getNowPlusDaysString(TTD_RID_CFG.FIRSTPARTY_COOKIE_EXPIRY_DAYS),TTD_RID_CFG.FIRSTPARTY_COOKIE_OPTIONS),ttd_executeCallbacks(!1===t?TTD_RID_STATUS.NEW:TTD_RID_STATUS.REFRESHED,_.TDID)})).catch((function(t){ttd_log("Caught error handling fetch response."),ttd_log(t),ttd_executeCallbacks(TTD_RID_STATUS.FAILED,!1)}))}catch(t){ttd_log("Caught error during fetch request."),ttd_log(t),ttd_executeCallbacks(TTD_RID_STATUS.FAILED,!1)}else ttd_log("Skipped cookie refresh."),ttd_executeCallbacks(TTD_RID_STATUS.SKIPPED,t)}();